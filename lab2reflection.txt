1. Your design probably has a type called something like Car or Vehicle that is a supertype to both Volvo and Scania. What is the 
contract for gas() and brake() in this type? Do the implementations of gas() and brake() in both Volvo and Scania follow this 
contract? Does your design follow the Liskov Substitution Principle?

Kontraktet för gas() respektive brake() säger att sålänge värdet för gas/brake är accepterat, och objektet är i ett förflyttningsbart 
läge, kommer objektets hastighet inkrementeras eller dekrementeras. Volvo och Scania följer båda dessa kontrakt, relevant är att Volvo
alltid är i förflyttningsbart läge.

Eftersom att vi inte kan instansiera objekt av olika nivåer i subklasshierarkin, kan vi inte bryta mot Liskov Substitution Principle.
Eventuellt bryter vi mot denna princip i Transporters move(), då kontraktet i Vehicles move() endast flyttar objektet, medans Transporters
även drar med sig bilarna på släpet. Kontraktet i detta fall är inte samma mellan klasserna, men vi anser att de i detta fall är 
acceptabelt då en transporters jobb är att dra med sig bilarna som står på släpet. 


2. How did you handle duplicated code between Scania, the car transporters and the repair shops? Explain how you decided when to 
use subclassing and when to use composition and delegation.

Vi skapade en klass Truck som superklass till Scania och Transporter, där vi implementerade deras delade kod. För att sedan hantera
kodduplicering mellan Transporter och Car repair shop utan att implementera i Scania, använde vi oss av delegering och skapade CarLoader. 
Transporter och Car repair shop skapar alltså en instans av CarLoader som de "delegerar arbete till".


3. Did you need to modify the design from lab 1 in order to make these extensions? If so, how could you have noticed that your design 
from Lab 1 did not follow the Open-Closed Principle before you started working on Lab 2?

För det mest följde vi Open-Closed Principle väl under lab 1 och detta lönade sig. Det vi ändrade efter respons var att vi skapade 
superklasserna TrimCar och TurboCar till Saab respektive Volvo, detta så att det sedan ska gå att skapa nya klasser för andra bilar. 
Lab 2 berörde inte dessa klasser så vi hade inte märkt av någon skillnad. Dock är det framtidssäkert då vi nu enkelt kan skapa nya 
varianter av turboCars och TrimCars.